{{ if and .Values.phpmyadmin.enabled (not .Values.phpmyadmin.existingSecret) }}
#---
#apiVersion: batch/v1
#kind: Job
#metadata:
#  name: {{ template "mysql-single.fullname" . }}-pma-create-db
#  labels:
#    app.kubernetes.io/name: {{ include "mysql-single.name" . }}
#    helm.sh/chart: {{ include "mysql-single.chart" . }}
#    app.kubernetes.io/instance: {{ .Release.Name }}
#    app.kubernetes.io/managed-by: {{ .Release.Service }}
#  annotations:
#    "helm.sh/hook": post-install
#    "helm.sh/hook-weight": "0"
#    "helm.sh/hook-delete-policy": hook-succeeded
#spec:
#  backoffLimit: 10
#  template:
#    metadata:
#      name: {{ template "mysql-single.fullname" . }}-pma-create-db
#      labels:
#        app.kubernetes.io/name: {{ include "mysql-single.name" . }}
#        helm.sh/chart: {{ include "mysql-single.chart" . }}
#        app.kubernetes.io/instance: {{ .Release.Name }}
#        app.kubernetes.io/managed-by: {{ .Release.Service }}
#    spec:
#      restartPolicy: "OnFailure"
#      containers:
#      - name: mysql-client
#        image: "banzaicloud/mysql-client:0.0.4"
#        imagePullPolicy: IfNotPresent
#        env:
#          - name: VERBOSE
#            value: "true"
#          - name: MYSQL_HOST
#            value: {{ printf "%s-mysql-master.%s.%s" (include "mysql-single.fullname" . ) .Release.Namespace "svc.cluster.local" }}
#          - name: MYSQL_PASSWORD
#            valueFrom:
#              secretKeyRef:
#                name: {{ include "mysql-single.fullname" . }}-cluster
#                key: ROOT_PASSWORD
#        args:
#          - CREATE DATABASE `pma`;

---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "mysql-single.fullname" . }}-pma-create-user
  labels:
    app.kubernetes.io/name: {{ include "mysql-single.name" . }}
    helm.sh/chart: {{ include "mysql-single.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  backoffLimit: 10
  template:
    metadata:
      name: {{ template "mysql-single.fullname" . }}-pma-create-user
      labels:
        app.kubernetes.io/name: {{ include "mysql-single.name" . }}
        helm.sh/chart: {{ include "mysql-single.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      restartPolicy: "OnFailure"
      containers:
      - name: mysql-client
        image: "banzaicloud/mysql-client:0.0.4"
        imagePullPolicy: IfNotPresent
        env:
          - name: VERBOSE
            value: "true"
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "mysql-single.fullname" . }}-cluster
                key: ROOT_PASSWORD
          - name: MYSQL_HOST
            value: {{ printf "%s-mysql-master.%s.%s" (include "mysql-single.fullname" . ) .Release.Namespace "svc.cluster.local" }}
          - name: PMA_CONTROLUSER
            valueFrom:
              secretKeyRef:
                name: {{ include "mysql-single.fullname" . }}-phpmyadmin
                key: username
          - name: PMA_CONTROLPASS
            valueFrom:
              secretKeyRef:
                name: {{ include "mysql-single.fullname" . }}-phpmyadmin
                key: password
        args:
          - CREATE USER '{{ `{{ .PMA_CONTROLUSER }}` }}'@'%' IDENTIFIED BY '{{ `{{.PMA_CONTROLPASS | replace "'" "\\'" }}` }}';

---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "mysql-single.fullname" . }}-pma-grant-user
  labels:
    app.kubernetes.io/name: {{ include "mysql-single.name" . }}
    helm.sh/chart: {{ include "mysql-single.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  backoffLimit: 10
  template:
    metadata:
      name: {{ template "mysql-single.fullname" . }}-pma-grant-user
      labels:
        app.kubernetes.io/name: {{ include "mysql-single.name" . }}
        helm.sh/chart: {{ include "mysql-single.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      restartPolicy: "OnFailure"
      containers:
      - name: mysql-client
        image: "banzaicloud/mysql-client:0.0.4"
        imagePullPolicy: IfNotPresent
        env:
        - name: VERBOSE
          value: "true"
        - name: MYSQL_HOST
          value: {{ printf "%s-mysql-master.%s.%s" (include "mysql-single.fullname" . ) .Release.Namespace "svc.cluster.local" }}
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "mysql-single.fullname" . }}-cluster
              key: ROOT_PASSWORD
        - name: PMA_CONTROLUSER
          valueFrom:
            secretKeyRef:
              name: {{ include "mysql-single.fullname" . }}-phpmyadmin
              key: username
        args:
        - GRANT ALL PRIVILEGES ON phpmyadmin.* TO '{{ `{{ .PMA_CONTROLUSER }}` }}'@'%';

---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "mysql-single.fullname" . }}-pma-flush-privileges
  labels:
    app.kubernetes.io/name: {{ include "mysql-single.name" . }}
    helm.sh/chart: {{ include "mysql-single.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "15"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  backoffLimit: 10
  template:
    metadata:
      name: {{ template "mysql-single.fullname" . }}-pma-flush-privileges
      labels:
        app.kubernetes.io/name: {{ include "mysql-single.name" . }}
        helm.sh/chart: {{ include "mysql-single.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      restartPolicy: "OnFailure"
      containers:
      - name: mysql-client
        image: "banzaicloud/mysql-client:0.0.4"
        imagePullPolicy: IfNotPresent
        env:
          - name: VERBOSE
            value: "true"
          - name: MYSQL_HOST
            value: {{ printf "%s-mysql-master.%s.%s" (include "mysql-single.fullname" . ) .Release.Namespace "svc.cluster.local" }}
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "mysql-single.fullname" . }}-cluster
                key: ROOT_PASSWORD
        args:
          - FLUSH PRIVILEGES;

{{ end }}